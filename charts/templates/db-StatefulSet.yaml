apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ .Release.Name }}-{{ .Values.db.name }}"
  labels:
    app: {{ .Values.db.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.db.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.db.name }}
    spec:
      containers:
      - name: {{ .Values.db.name }}
        image: "{{ .Values.db.image.repository }}:{{ .Values.db.image.tag }}"
        ports:
        - containerPort: {{ .Values.db.port }}
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: MYSQL_ROOT_PASSWORD
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: MYSQL_DATABASE
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: MYSQL_USER
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-secret
              key: MYSQL_PASSWORD
        volumeMounts:
        - name: {{ .Values.db.volumen.name }}
          mountPath: /var/lib/mysql
        # asegurarte de que solo est√© marcado como listo cuando pueda aceptar conexiones
        readinessProbe:
          exec:
            command:
            - "/bin/sh"
            - "-c"
            - |
              mysqladmin ping -h localhost --silent
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3    
      volumes:
      - name: {{ .Values.db.volumen.name }}
        persistentVolumeClaim:
          claimName: {{ .Values.db.pvc.name }}